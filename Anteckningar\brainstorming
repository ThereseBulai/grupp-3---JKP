Deadline: 2025-02-25 kl. 23:59

TODO:
- Skapa github-repo
- Bjud in alla och Max
- Välj fallbeskrivningar
- Skriva ner vad ska testas och varför
- Skriva acceptanskriterie för testen
- Sätt upp en backlog för projektet
- Skapa branches i repot
- Bygga upp robotframework-filen
- Alma gör en robotfil
- Lägg till kort motivering på alla testfall (det ska med i inlämningen)



TODO 17/2:
TODO:
- Fixa att datumet skrivs in korrekt
- Fixa att koden vi har är PASS
- Se över vilka tester som saknas för vardera testfall
- Snåla-kalle - boka safari
- Skapa VG-branches för alla i gruppen
- Se över hur vi skrivit dokumentationen i filerna så att vi skriver på samma sätt
- Se över att vi har gjort klart G-delen och är pass innan det skickas upp till main
- Spela in presentationen på egen hand:
- Kotaiba - Registrera & Hur arbetade ni som grupp? Ändrade ni arbetssätt under projektets gång, i så fall, varför?
- Therese - Snåla-Kalle & hur kom vi fram till vad vi skulle testa och hur?
- Alma - Kim och familjen & vilka testdesigntekniker 




Lista på vad ska testas och hur: 

Valda fallbeskrivningar:

Snåla-Kalle:
Snåla-Kalle älskar två saker, att spara pengar och att hitta bra deals. Hen har besökt
parken tidigare, men har på internetforumet ”Xtreme Deal Hunters” sett rykten om att
Jurasstina-Kalle Park numera erbjuder rabatter för förstagångsbesökare (ett falskt rykte
som sprids av parkens största rival, den avundsjuke ”Svina-Qalles Dodo Family Farm”).
Snåla-Kalle har bestämt sig: ”Det spelar ingen roll om det är sant eller inte, jag ska ha
den där rabatten!”. Snåla-Kalle tänker därför använda sitt alias ”Ståla-Nalle” för att
försöka få denna rabatt och test beställa en entrébiljett med förhoppningen av att denna
rabatt dyker upp.


Vad ska testas och varför:
- Testa så att man bara kan registrera ett unikt konto
- Rabatter ska inte fungera för nya konton
- Göra en testbeställning för en entré biljett
- Testa felhantering vid inmatning av för få tecken på lösenord




Kim och familjen: Kim, hens partner och deras två barn planerar att besöka Jurasstina-Kalle Park. 
Familjen har sparat i flera år för att göra resan, de började redan efter första barnets födsel, samtidigt som parken började byggas.
Kim och hens partner har båda krävande jobb som inte är särskilt flexibla med ledighet, de kommer därför göra resan över helgen, 
men trots detta vill dom kunna utnyttja sin tid i parken ordentligt och de vill låta barnen uppleva dinosaurier på nära håll, dom har trots allt sparat länge för denna resa. 

Vad ska testas och varför:
- beställa biljetter för att mata dinosaurier (barnen vill uppleva dem på nära håll)
- de måste beställa vip-biljett för att kunna boka helgen (pga av att de inte är flexibla på vardagar)
- beställa flera olika biljetter (?) (det står att de vill utnyttja sin tid i parken.)
- det ska gå in olika priser på biljetterna ( eftersom det finns både barn och vuxna.)








Er uppgift är att ta fram testfall som täcker upp de behov som beskrivs, i er inlämning motiverar ni kortfattat era val. Ni behöver alltså läsa igenom texterna och utifrån dessa beskrivningar
ta fram en övergripande av vad som ska testas och varför. När ni har er övergripande beskrivning behöver den brytas ned till olika testfall. 
Dessa testfall skrivs enligt principerna för BDD. Dessa skrivs som exekverbara tester i Robot Framework med Gherkin-syntax. 



TOMS UPPGIFT:
Mitt uppdrag till er är att ni skall skapa en backlog för den uppgiften. “Product Backlog The Product Backlog is an emergent, 
ordered list of what is needed to improve the product. It is the single source of work undertaken by the Scrum Team. Product Backlog items that can be Done by the Scrum Team within one Sprint are deemed ready for selection in a Sprint Planning event.
 They usually acquire this degree of transparency after refining activities. Product Backlog refinement is the act of breaking down and further defining Product Backlog items into smaller more precise items. This is an ongoing activity to add details, such as a description,
 order, and size. Attributes often vary with the domain of work. The Developers who will be doing the work are responsible for the sizing. The Product Owner may influence the Developers by helping them understand and select trade-offs.” https://scrumguides.org/scrum-guide.html - product-backlog
 Baserat på uppgiften ni får av Max skall ni i era grupper, a. Bryta ned uppgiften i de delar som ni behöver för att nå upp till kraven för uppgiften. b. Prioritera alla backlog items utifrån den ordning ni tror saker behöver utföras.
 Del 2 Läs igenom sidorna 8 – 21 i “Prioritera, fokusera, leverera” och skriv ned en fråga ni fick kring detta. Skicka eran fråga till tom.anstensen@iths.se så kommer jag att börja dagen på onsdag med att svara på några av dessa frågor.


För VG kan man köra felhantering




Presentation:
Kotaiba:  
Här är en kortfattad förklaring av varje test:
Register New Account Valid Login
Användaren registrerar ett nytt konto.
Användaren loggar in med de registrerade uppgifterna.
Förväntat resultat: Inloggningen lyckas.
No Registration Of New Account Log in Invalid
Användaren försöker logga in utan att ha registrerat ett konto.
Förväntat resultat: Inloggningen misslyckas.
Register New Account Log In With Invalid Username
Användaren registrerar ett konto.
Användaren försöker logga in med ett felaktigt användarnamn.
Förväntat resultat: Inloggningen misslyckas.
New Account Log In With Invalid Password
Användaren registrerar ett konto.
Användaren försöker logga in med ett felaktigt lösenord.
Förväntat resultat: Inloggningen misslyckas.
Alla tester verifierar olika scenarier för registrering och inloggning.

Hur arbetade ni som grupp? Arbetet i gruppen var väldigt organiserat där vi delade upp arbetet och la in testerna i Github backlog som gjorde att vi hade koll på vad som ska prioriteras och vad som är färdig.
 Vi var jättenoga med att ha en bra kommunikation och meddela när man gör ändringar så alla har koll. Ändrade ni arbetssätt under projektets gång, i så fall, varför? Vi har inte ändrat på arbetssättet 




Therese: 
Snåla-Kalle →Testet är utformat utifrån personan Snåla-Kalle som vill ha en så billig biljett som möjligt och vill se om han kan få rabatt. 
Han skapar ett konto under sitt alias, loggar in och lägger till, han går vidare till checkouten och ser att han inte kan lägga till en rabatt och väljer då att ta bort biljetten istället. 

Hur vi kom fram till vad som skulle testas:
Vi inledde projektet med att skapa ett Kanban-projekt i github. Vi diskuterade vad för funktioner och flöden som behövde testas för att täcka upp användarfallens behov. 
Vi satte graderingar i hur viktiga testen var baserat på hur viktiga funktionen är för att genomföra de olika uppgifterna. Backloggen har används som en checklista för vad som ska testas. 



Alma: Valt Kim & Familjen. Fokuset har legat på att skapa tester för att användaren kan köpa vip-biljetter för hela sin familj, samt att välja safari-turer på helgen då det var ett av kraven i användarfallet.
“Kör igång testerna. förklara efter vad varje test har gjort, gå stegvis igenom keyworden under varje test.
Vårt val av designteknik har vart att fokusera på att hålla filerna så strukturerade och tydliga som möjligt. 
till en början hade vi en fil vi skrev allt i, men ganska snabbt valde vi att dela upp variabler och keywords i separata filer. Sedan lade vi även till att varje användarfall ska ha varsin fil, samt att register/login testerna fick en egen fil då de används 




